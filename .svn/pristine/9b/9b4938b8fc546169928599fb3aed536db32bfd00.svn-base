package controller;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.Serializable;
import java.util.Scanner;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.validator.ValidatorException;
import javax.servlet.ServletContext;
import javax.servlet.http.Part;

import org.primefaces.event.FileUploadEvent;

@ManagedBean
public class EnviarArquivoBean implements Serializable {

	private static final long serialVersionUID = 1L;
	private Part arquivo;
	private static final int MAX_SIZE = 2 * 1024 * 1024;

	public void importa() {
		try {
			String conteudo = new Scanner(arquivo.getInputStream()).useDelimiter("\\A").next();
			System.out.println(conteudo);
		} catch (IOException e) {
			// trata o erro
		}
	}
	
	
	    // outros métodos

	    public void valida(FacesContext context, UIComponent component, Object value) {

	        Part arquivo = (Part) value;

	        if (arquivo.getSize() > MAX_SIZE) {
	            FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_ERROR, 
	                    "Arquivo muito grande", "O arquivo deve ter o tamanho máximo de 2mb.");
	            throw new ValidatorException(msg);
	        }

	        if (!"text/plain".equals(arquivo.getContentType())) {
	            FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_ERROR, 
	                    "Tipo de arquivo inválido", "O arquivo deve ser do tipo texto.");
	            throw new ValidatorException(msg);
	        }
	    }

	public Part getArquivo() {
		return arquivo;
	}

	public void setArquivo(Part arquivo) {
		this.arquivo = arquivo;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}
	
	
}
